{"version":3,"sources":["App/component.js","index.js","App/style.module.css"],"names":["QUESTION_REFERENCES","COLUMNS","title","dataIndex","key","Object","entries","map","ref","Component","useAuth0","getAccessTokenSilently","loginWithRedirect","isLoading","isAuthenticated","useState","itemsMap","setItemsMap","activeEmail","setActiveEmail","inputOptions","setInputOptions","matchingItems","setMatchingItems","useEffect","a","accessToken","fetch","headers","then","response","json","itemsByEmail","reduce","accumulator","item","answers","find","emailAnswer","type","email","choice","label","other","field","keys","includes","asyncGetSubmissions","activeItem","nextMatchingItems","answersMap","answersDiff","omitBy","value","size","filter","Boolean","className","styles","container","search","onSearch","searchText","nextInputOptions","onSelect","options","placeholder","dataSource","sort","b","columns","locale","emptyText","pagination","onClick","displayName","ReactDOM","render","audience","domain","clientId","redirectUri","window","location","origin","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87edda62.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button, AutoComplete, Typography, Table } from 'antd';\nimport { omitBy, size } from 'lodash';\n\nimport styles from './style.module.css';\n\nconst QUESTION_REFERENCES = {\n  '543f7794-623d-4f0a-a668-53e5f531aafd': 'Politics',\n  '8ddbf9a0-be52-40ed-bf5b-4c9609f9a128': 'Guns',\n  '5ec5af28-5c30-4225-8393-c26326d8e2d9': 'Abortion',\n  '681b6b25-c283-45cc-a72f-da375b44a265': 'Religion',\n  '9de70c38-6de7-49e4-8c44-855c2d427968': 'Racial justice',\n  '841d5268-ce50-45fd-9a86-d30197a6ee02': 'Climate change',\n}\n\nconst COLUMNS = [\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  ...Object.entries(QUESTION_REFERENCES).map(([ref, text]) => ({\n    title: text,\n    dataIndex: ref,\n    key: ref\n  }))\n];\n\nexport const Component = () => {\n    const {\n      getAccessTokenSilently,\n      loginWithRedirect,\n      isLoading,\n      isAuthenticated\n    } = useAuth0();\n    const [itemsMap, setItemsMap] = useState([]);\n    const [activeEmail, setActiveEmail] = useState(null);\n\n    const [inputOptions, setInputOptions] = useState([]);\n\n    const [matchingItems, setMatchingItems] = useState({});\n\n    useEffect(() => {\n      if (!isAuthenticated) return;\n\n      const asyncGetSubmissions = async () => {\n        const accessToken = await getAccessTokenSilently();\n\n        const response = await fetch(\n          'https://5qfry2gbjh.execute-api.eu-west-1.amazonaws.com/dev/getSubmissions',\n          {\n            headers: {\n              'Authorization': `Bearer ${accessToken}`,\n            },\n          }\n        ).then(response => response.json());\n\n        const itemsByEmail = response.reduce((accumulator, item) => {\n\n          if (!item || !item.answers || !item.answers.find) return accumulator;\n\n          const emailAnswer = item.answers.find(({ type }) => type === 'email');\n\n          if (!emailAnswer) return accumulator;\n\n          const key = emailAnswer.email;\n\n          if (!key) return accumulator;\n\n          return {\n            ...accumulator,\n            [key]: item.answers.reduce((accumulator, {\n              choice: { label, other } = {},\n              field: { ref } }) => {\n\n                if (!Object.keys(QUESTION_REFERENCES).includes(ref)) {\n                  return accumulator;\n                }\n\n               return {\n                 ...accumulator,\n                 [ref]: label || other\n               }\n            }, {})\n          };\n\n        }, {})\n\n        setItemsMap(itemsByEmail);\n      };\n\n      asyncGetSubmissions();\n\n    }, [isAuthenticated]);\n\n    useEffect(() => {\n\n      if (!activeEmail) {\n        setMatchingItems({});\n        return;\n      };\n\n      const activeItem = itemsMap[activeEmail];\n\n      const nextMatchingItems = Object\n        .entries(itemsMap)\n        .map(([email, answersMap]) => {\n\n          if (email === activeEmail) return false;\n\n          const answersDiff = omitBy(answersMap, (value, key) => activeItem[key] === value);\n\n          if (!size(answersDiff)) return false;\n\n          return [email, answersDiff];\n        })\n        .filter(Boolean)\n        .reduce((accumulator, [email, answersDiff]) => ({ ...accumulator, [email]: answersDiff }), {})\n\n      setMatchingItems(nextMatchingItems);\n\n    }, [activeEmail]);\n\n    const handleSearch = searchText => {\n\n      const nextInputOptions = Object\n        .keys(itemsMap)\n        .filter(key => key.includes(searchText))\n        .map(key => ({ value: key }));\n\n      setInputOptions(nextInputOptions);\n    }\n\n    const handleSelect = value => setActiveEmail(value);\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (!isAuthenticated) {\n      return (\n        <Button size=\"large\" onClick={() => loginWithRedirect()}>Log In</Button>\n      );\n    }\n\n    return (\n      <div className={styles.container}>\n        <AutoComplete\n          className={styles.search}\n          onSearch={handleSearch}\n          onSelect={handleSelect}\n          options={inputOptions}\n          placeholder=\"charles.ompassion@crisis.org\"\n        />\n        <Table\n          dataSource={activeEmail ? [\n            {\n              key: activeEmail,\n              email: activeEmail,\n              ...itemsMap[activeEmail]\n            },\n            ...Object\n              .entries(matchingItems)\n              .sort((a, b) => size(b[1]) - size(a[1]))\n              .map(([email, answers]) => ({\n                key: email,\n                email,\n                ...answers\n              }))\n          ] : []}\n          columns={COLUMNS}\n          locale={{\n            emptyText: 'Search an email to see some delicious results'\n          }}\n          pagination={false}\n        />\n      </div>\n    );\n\n}\n\nComponent.displayName = 'App';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Auth0Provider\n    audience=\"https://5qfry2gbjh.execute-api.eu-west-1.amazonaws.com/\"\n    domain=\"dev-2g9z9q0r.eu.auth0.com\"\n    clientId=\"lhY52r9n6PzCzCzNHynJhHHpQZKuxoUB\"\n    redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__XThPV\",\"search\":\"style_search__XaW58\"};"],"sourceRoot":""}